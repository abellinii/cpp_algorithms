#include <iostream>

//Question

//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even - valued terms.



int evenFibs(int n);
int total = 0;

int main() {

	
	int total = 0;
	
	
	//loop through and add 3 at each iteration because we know that in the sequence only every third number is even.

	for (size_t i = 0; evenFibs(i) < 4000000; i+=3) {                      //If we didnt know that every third number is even..... add another condition to the if statement.

		//Check the number is smaller than the one described in the question.

		if (evenFibs(i) < 4000000) {                 // && evenFibs(i) %2 == 0
			total += evenFibs(i);
		}
	}
	
	std::cout << total;
	system("pause");
	return 0;

}



//recursive fibonacci function to get sequence number.

int evenFibs(int n) {

	if (n == 0)
	{
		return 0;
	}
	else if (n == 1) {
		return 1;
	}
		
	else {

		return evenFibs(n - 1 ) + evenFibs(n - 2);
		
	}
	
}